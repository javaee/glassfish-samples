<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2010-2011 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!-- Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.-->

<project name="glassfish-samples" default="all" basedir="."  xmlns:artifact="urn:maven-artifact-ant">
    <description>Builds, tests, and packages the project glassfish-samples.</description>

    <import file="bp-project/main.xml"/>

    <property file="bp-project/test.properties"/>
    <property file="javaee6_samples.properties"/>

    <property name="dist.dir" value="dist"/>
    <property name="test.results.dir" value="test-results"/>

    <!-- defined maven snapshots and staging repository id and url -->
    <property name="maven-snapshots-repository-id" value="jvnet-nexus-snapshots" />
    <property name="maven-snapshots-repository-url" value="https://maven.java.net/content/repositories/snapshots/" />
    <property name="maven-staging-repository-id" value="jvnet-nexus-staging" />
    <property name="maven-staging-repository-url" value="https://maven.java.net/service/local/staging/deploy/maven2/" />


    <target name="init-dist">
        <delete dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="init-test">
        <delete dir="${test.results.dir}"/>
        <mkdir dir="${test.results.dir}"/>
    </target>

    <patternset id="bp.project.contents"
        includes="bp-project/**"
        excludes="build.xml,bp-project/test.xml,bp-project/build.properties.xyz,bp-project/test.properties"
    />

    <patternset id="web.profile.contents"
        includes="index.html, javaee6/index.html, javaee6/docs/UserREADME.html, javaee6/docs/UserTroubleShooting.html, javaee6/docs/list.html, javaee6/docs/JavaDB.html, javaee6/docs/javadb-setup/**,javaee6/ha/**,
                  javaee6/jpa/**, javaee6/ejb/ejb31-war/**, javaee6/web/container/**, javaee6/web/servlet/**, javaee6/web/jsf/**, javaee6/security/**, javaee6/weld/**"
        excludes="javaee6/security/web-security-annotation/**,javaee6/**/test/**"/>

    <patternset id="classic.profile.contents"
        includes="javaee6/index.html, javaee6/docs/Components.js, javaee6/docs/UserREADME.html, javaee6/docs/UserTroubleShooting.html, javaee6/docs/list.html, javaee6/docs/JavaDB.html, javaee6/docs/javadb-setup/**,
                  javaee6/ejb/automatic-timer/**, javaee6/ejb/ejb-embedded/**, javaee6/rest/**, javaee6/webservices/**, javaee6/connectors/apps/**"
        excludes="javaee6/**/test/**"/>

    <!-- TODO: use bp, web and classic contents -->
    <patternset id="include.sdk.contents"
        includes="bp-project/**, docs/**, index.html, javaee6/build.xml, javaee6/docs/**, javaee6/index.html, javaee6/LICENSE, javaee6/connectors/apps/mailconnector/mailconnector-ear/**, javaee6/connectors/apps/mailconnector/mailconnector-ra/**, javaee6/ejb/automatic-timer/**, javaee6/ejb/ejb31-war/**, javaee6/ejb/ejb-embedded/**, javaee6/jpa/locking/**, javaee6/rest/message-board-war/**, javaee6/security/build.xml, javaee6/security/http-method-omission/**, javaee6/security/programmatic-login/**, javaee6/web/jsf/basic-ajax/**, javaee6/web/jsf/basic-ezcomp/**, javaee6/web/servlet/annotation-war/**, javaee6/web/servlet/async-request-war/**, javaee6/web/servlet/dynamicregistration-war/**, javaee6/web/servlet/multipart-war/**, javaee6/web/servlet/absolute-ordering-web-fragments-war/**, javaee6/web/servlet/jsp-resource-in-bundled-jar-war/**, javaee6/web/servlet/servletcontainerinitializer-war/**, javaee6/web/servlet/sessioncookieconfig-war/**, javaee6/webservices/hello-jaxws2.2/**, javaee6/webservices/hello-singleton-ejb/**, javaee6/webservices/hello-webserviceref/**, javaee6/rest/managed-beans-war/**, javaee6/web/jsf/scrumtoys/**, javaee6/weld/weld-guess/**, javaee6/weld/weld-servlet/**, javaee6/connectors/apps/mailconnector/**, javaee6/jpa/advancedMapping/**, javaee6/jpa/criteriaQuery/**, javaee6/web/container/customvalve-war/**, javaee6/web/container/mod_jk/**"
        excludes="build.xml,bp-project/test.xml,bp-project/build.properties.xyz,bp-project/test.properties,javaee6/docs/DeveloperREADME.html, javaee6/docs/DeveloperTroubleShooting.html, javaee6/docs/sample_doc_template.html,javaee6/docs/sdk_samples_index.html,javaee6/docs/UnitTesting.html,javaee6/**/test/**"/>

    <patternset id="exclude.installer.license"
        excludes="javaee6/LICENSE"/>

    <target name="package-sdk" depends="init-dist"
        description="packages the samples into a single jar for SDK">
        <mkdir dir="${dist.dir}"/>
	<antcall target="check-out-legal"/>
        <copy file="javaee6/docs/sdk_samples_index.html" tofile="${dist.dir}/index.html"/>
        <move failonerror="false" file="bp-project/build.properties" tofile="bp-project/build.properties.xyz" />
        <copy file="bp-project/build.properties.sample" tofile="bp-project/build.properties"/>
        <zip destfile="${dist.dir}/${release.dirname}.jar">
            <zipfileset dir="${dist.dir}" 
                includes="index.html,javaee6/**"/>
            <zipfileset dir="."> 
                <patternset refid="include.sdk.contents"/>
                <patternset refid="exclude.installer.license"/>
            </zipfileset>
        </zip>
        <delete file="${dist.dir}/index.html"/>
        <delete dir="${dist.dir}/javaee6"/>
        <move failonerror="false" file="bp-project/build.properties.xyz" tofile="bp-project/build.properties" />
    </target>

    <target name="package-profiles" depends="init-dist"
        description="creates packages for bp-project, web-profile and classic-profile">
        <mkdir dir="${dist.dir}"/>
	<antcall target="package-bp"/>
	<antcall target="package-web"/>
	<antcall target="package-classic"/>
    </target>

    <target name="package-bp" 
        description="packages the bp-project into a single jar">
        <copy file="bp-project/build.properties.sample" tofile="bp-project/build.properties"/>
        <zip destfile="${dist.dir}/${release.dirname}-bp-project.zip">
            <zipfileset dir="."> 
                <patternset refid="bp.project.contents"/>
            </zipfileset>
        </zip>
    </target>

    <target name="package-web"
        description="packages the web-profile samples into a single jar for SDK">
        <copy file="javaee6/docs/sdk_samples_index.html" tofile="index.html"/>
        <zip destfile="${dist.dir}/${release.dirname}-web-profile.zip">
            <zipfileset dir="."> 
                <patternset refid="web.profile.contents"/>
            </zipfileset>
        </zip>
        <delete file="index.html"/>
    </target>

    <target name="package-classic"
        description="packages the classic-profile samples into a single jar for SDK">
        <zip destfile="${dist.dir}/${release.dirname}-classic-profile.zip">
            <zipfileset dir="."> 
                <patternset refid="classic.profile.contents"/>
            </zipfileset>
        </zip>
    </target>

    <target name="package-installer" depends="init-dist"
        description="packages the samples into a single jar for installer">
        <move failonerror="false" file="bp-project/build.properties" tofile="bp-project/build.properties.xyz" />
        <copy file="bp-project/build.properties.sample" tofile="bp-project/build.properties"/>
        <zip destfile="${dist.dir}/${release.dirname}.gf.jar">
            <zipfileset dir="."> 
                <patternset refid="include.sdk.contents"/>
            </zipfileset>
        </zip>
        <move failonerror="false" file="bp-project/build.properties.xyz" tofile="bp-project/build.properties" />
    </target>

    <target name="clean"
        description="cleans workspace by removing temporary directories like dist">
        <delete dir="${dist.dir}"/>
        <delete dir="${test.results.dir}"/>
    </target>

    <path id="samples-test-list">
        <filelist dir="javaee6/connectors/apps/mailconnector/mailconnector-ear/test" files="build.xml"/>
        <filelist dir="javaee6/connectors/apps/mailconnector/mailconnector-ra/test" files="build.xml"/>
        <filelist dir="javaee6/ejb/automatic-timer/test" files="build.xml"/>
        <filelist dir="javaee6/ejb/ejb31-war/test" files="build.xml"/>
        <filelist dir="javaee6/ejb/hello-stateless-ejb/test" files="build.xml"/>
        <filelist dir="javaee6/jpa/locking/test" files="build.xml"/>
        <filelist dir="javaee6/rest/message-board-war/test" files="build.xml"/>
        <filelist dir="javaee6/security/http-method-omission/test" files="build.xml"/>
        <filelist dir="javaee6/security/programmatic-login/test" files="build.xml"/>
        <!-- issue# 9878 -->
        <!--filelist dir="javaee6/security/web-security-annotation/test" files="build.xml"/-->
        <filelist dir="javaee6/web/jsf/basic-ajax/test" files="build.xml"/>
        <filelist dir="javaee6/web/jsf/basic-ezcomp/test" files="build.xml"/>
        <filelist dir="javaee6/web/jsf/scrumtoys/test" files="build.xml"/>
        <filelist dir="javaee6/web/servlet/annotation-war/test" files="build.xml"/>
        <filelist dir="javaee6/web/servlet/async-request-war/test" files="build.xml"/>
        <filelist dir="javaee6/web/servlet/dynamicregistration-war/test" files="build.xml"/>
        <filelist dir="javaee6/webservices/hello-jaxws2.2/test" files="build.xml"/>
        <filelist dir="javaee6/webservices/hello-singleton-ejb/test" files="build.xml"/>
    </path>

    <macrodef name="iterate-tests">
        <attribute name="target"/>
        <sequential>
            <subant target="@{target}" failonerror="false">
                <buildpath refid="samples-test-list"/>
            </subant>
        </sequential>
    </macrodef>

    <target name="runtest" depends="init-test">
	<tstamp/>
	<!--property name="results.file" value="${test.results.dir}/${DSTAMP}_${TSTAMP}_test_results.txt"/-->
	<property name="results.file" value="${test.results.dir}/test_results.txt"/>
	<record name="${results.file}" action="start" loglevel="info"/>
	<iterate-tests target="runtest"/>
	<record name="${results.file}" action="stop"/>
    </target>

    <target name="check-out-legal">
        <exec dir="${dist.dir}" executable="cvs">
            <arg line="co samples/javaee6/legal"/>
        </exec>
	<move todir="${dist.dir}/javaee6/legal">
	    <fileset dir="${dist.dir}/samples/javaee6/legal">
                <include name="**/*"/>
	    </fileset>
	</move>
        <delete dir="${dist.dir}/samples"/>
    </target>

    <target name="all">
	<antcall target="set-perm-size"/>
	<antcall target="start-domain"/>
	<antcall target="start-db"/>
	<echo message="Build and run every sample"/>
	<subant target="-pre-setup">
	    <fileset dir="." includes="javaee6/build.xml"/>
	</subant>
	<subant target="all">
	    <fileset dir="." includes="javaee6/build.xml"/>
	</subant>
	<echo message="Unit testing"/>
	<antcall target="runtest"/>
	<subant target="-post-unsetup">
	    <fileset dir="." includes="javaee6/build.xml"/>
	</subant>
	<subant target="clean">
	    <fileset dir="." includes="javaee6/build.xml"/>
	</subant>
	<echo message="Packaging jar for staging"/>
	<antcall target="package-sdk"/>
	<antcall target="create-installer"/>
	<antcall target="stop-db"/>
	<antcall target="stop-domain"/>
    </target>

    <!-- build installer -->
    <taskdef name="installerBuilder" 
        classname="com.sun.tools.xjc.installer.builder.BuilderTask">
	<!--
        classname="org.jvnet.poormans_installer.builder.BuilderTask">
	-->
        <classpath>
            <fileset dir="${poormans.installer.home}" includes="*.jar"/>
        </classpath>
    </taskdef>

    <target name="create-installer" depends="package-installer">
        <!-- generate manifest.mf -->
        <property name="manifest.file" value="${dist.dir}/manifest.mf"/>
        <!-- do not format the following echo which is intentional -->
        <echo file="${manifest.file}" append="false">Main-Class: glassfish_samples_project</echo>
        <installerBuilder
            classFile="${dist.dir}/classes/glassfish_samples_project.class"
            licenseFile="javaee6/LICENSE"
            zipFile="${dist.dir}/${release.dirname}.gf.jar"/>
        <jar jarfile="${dist.dir}/${release.dirname}-installer.jar" 
            basedir="${dist.dir}/classes" manifest ="${manifest.file}"/>
        <delete file="${dist.dir}/${release.dirname}.gf.jar"/>
        <delete dir="${dist.dir}/classes"/>
        <delete file="${manifest.file}"/>
    </target>

    <target name="initialize.maven">
        <get
           src="http://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"
           dest="${dist.dir}/maven-ant-tasks-2.1.3.jar"
           verbose="true"
           usetimestamp="true"/>
        <path id="maven-ant-tasks.classpath" path="${dist.dir}/maven-ant-tasks-2.1.3.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
                 classpathref="maven-ant-tasks.classpath" />
        <artifact:dependencies settingsFile="${user.home}/.m2/settings.xml"/>		 
    </target>

    <target name="create.pom.file" if="artifact">
        <copy file="samples_template.pom" tofile="${dist.dir}/pom-${artifact}.xml" overwrite="true">
            <filterset>
                <filter token="ARTIFACT_ID" value="${artifact}"/>
                <filter token="VERSION" value="${release.version}"/>
                <filter token="SAMPLE_NAME" value="${sample.name}"/>
            </filterset>
        </copy>
    </target>

    <target name="upload.maven" depends="initialize.maven" description="Publish samples to Maven2 repository">
        <echo message="release.version ${release.version}"/>

        <antcall target="create.pom.file" >
           <param name="artifact" value="bp-project"/>
           <param name="sample.name" value="BP Project"/>
        </antcall>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
            <arg value="-Durl=${maven-snapshots-repository-url}" />
            <arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
            <arg value="-DpomFile=${dist.dir}/pom-bp-project.xml" />
            <arg value="${mvn.https.proxy.host}" />
            <arg value="${mvn.https.proxy.port}" />
            <arg value="-Dfile=${dist.dir}/${release.dirname}-bp-project.zip" />
        </artifact:mvn>

        <antcall target="create.pom.file" >
           <param name="artifact" value="web-profile"/>
           <param name="sample.name" value="Web Profile"/>
        </antcall>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
            <arg value="-Durl=${maven-snapshots-repository-url}" />
            <arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
            <arg value="-DpomFile=${dist.dir}/pom-web-profile.xml" />
            <arg value="${mvn.https.proxy.host}" />
            <arg value="${mvn.https.proxy.port}" />
            <arg value="-Dfile=${dist.dir}/${release.dirname}-web-profile.zip" />
        </artifact:mvn>

        <antcall target="create.pom.file" >
           <param name="artifact" value="classic-profile"/>
           <param name="sample.name" value="Classic Profile"/>
        </antcall>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
            <arg value="-Durl=${maven-snapshots-repository-url}" />
            <arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
            <arg value="-DpomFile=${dist.dir}/pom-classic-profile.xml" />
            <arg value="${mvn.https.proxy.host}" />
            <arg value="${mvn.https.proxy.port}" />
            <arg value="-Dfile=${dist.dir}/${release.dirname}-classic-profile.zip" />
        </artifact:mvn>
    </target>


    <!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
    <target name="release.maven" depends="initialize.maven" description="deploy release version to Maven staging repository">

        <antcall target="create.pom.file" >
           <param name="artifact" value="bp-project"/>
           <param name="sample.name" value="BP Project"/>
        </antcall>
        <!-- sign and deploy the bp-project zip artifact -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${maven-staging-repository-url}" />
            <arg value="-DrepositoryId=${maven-staging-repository-id}" />
            <arg value="-DpomFile=${dist.dir}/pom-bp-project.xml" />
            <arg value="-Dfile=${dist.dir}/${release.dirname}-bp-project.zip" />
            <arg value="${mvn.https.proxy.host}" />
            <arg value="${mvn.https.proxy.port}" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <!-- sign and deploy the web-profile zip artifact -->
        <antcall target="create.pom.file" >
           <param name="artifact" value="web-profile"/>
           <param name="sample.name" value="Web Profile"/>
        </antcall>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${maven-staging-repository-url}" />
            <arg value="-DrepositoryId=${maven-staging-repository-id}" />
            <arg value="-DpomFile=${dist.dir}/pom-web-profile.xml" />
            <arg value="-Dfile=${dist.dir}/${release.dirname}-web-profile.zip" />
            <arg value="${mvn.https.proxy.host}" />
            <arg value="${mvn.https.proxy.port}" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <!-- sign and deploy the classic-profile zip artifact -->
        <antcall target="create.pom.file" >
           <param name="artifact" value="classic-profile"/>
           <param name="sample.name" value="Classic Profile"/>
        </antcall>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${maven-staging-repository-url}" />
            <arg value="-DrepositoryId=${maven-staging-repository-id}" />
            <arg value="-DpomFile=${dist.dir}/pom-classic-profile.xml" />
            <arg value="-Dfile=${dist.dir}/${release.dirname}-classic-profile.zip" />
            <arg value="${mvn.https.proxy.host}" />
            <arg value="${mvn.https.proxy.port}" />
            <arg value="-Pgpg" />
        </artifact:mvn>
    </target>

</project>
